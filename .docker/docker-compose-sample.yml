version: '3.6'

services:
  db:
    image: mysql:5.7
    container_name: ${APP_NAME}-db
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
  
  wordpress:
    build:
      context: .
      dockerfile: wordpress/Dockerfile
    container_name: ${APP_NAME}-wp
    environment:
      MYSQL_HOST: ${DB_HOST}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ../.docker/wordpress/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ../web:/var/www/html
      - ../web/wp-config-sample.php:/var/www/html/wp-config-sample.php
      - ../web/wp-content/uploads:/var/www/html/wp-content/uploads:cached
      - ../web/wp-content/plugins:/var/www/html/wp-content/plugins:cached
      - ../web/wp-includes:/var/www/html/wp-includes:cached
      - ../web/wp-admin:/var/www/html/wp-admin:cached
    restart: unless-stopped
    command: > 
      bash -c '
        if [ ! -d "/var/www/html/wp-content/themes/${WP_THEME_NAME}" ]
        then
            echo "Directory /path/to/dir DOES NOT exists." 
            mv /var/www/html/wp-content/themes/default /var/www/html/wp-content/themes/${WP_THEME_NAME}
        fi
        php-fpm
      '

  sonarqube:
    image: sonarqube:latest
    container_name: ${APP_NAME}-sonarqube
    ports:
      - 9000:9000
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: unless-stopped

  postgres:
    image: postgres:12
    container_name: ${APP_NAME}-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    restart: unless-stopped

  composer:
    image: composer:1
    container_name: ${APP_NAME}-composer
    working_dir: /var/www/html
    restart: 'no'
    volumes:
      - ../web:/var/www/html:rw,cached

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: ${APP_NAME}-nginx
    ports:
      - 80:80
      - 443:443
    environment:
      MYSQL_HOST: ${DB_HOST}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ../.docker/nginx/default.conf:/tmp/default.template
      - ../.docker/certs:/etc/certs
      - ../web:/var/www/html
    depends_on:
      - wordpress
      - db
    restart: unless-stopped
    entrypoint: /bin/bash -c 'cat /tmp/default.template | sed "s/\\\$$domain/${DOMAIN}/g" > /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"'

  nodejs:
    build:
      context: .
      dockerfile: node/Dockerfile
    container_name: ${APP_NAME}-node
    environment:
      DOMAIN: ${DOMAIN}
      WP_THEME_NAME: ${WP_THEME_NAME}
      NODE_PORT: ${NODE_PORT}
    depends_on:
      - nginx
      - wordpress
    working_dir: '/usr/app'
    volumes:
      - ../.babelrc:/usr/app/.babelrc
      - ../.browserslistrc:/usr/app/.browserslistrc
      - ../.eslintrc.json:/usr/app/.eslintrc.json
      - ../yarn.lock:/usr/app/yarn.lock
      - ../package.json:/usr/app/package.json
      - ../webpack:/usr/app/webpack
      - ../assets:/usr/app/assets
      - ../web/wp-content/themes/${WP_THEME_NAME}:/usr/app/web/wp-content/themes/${WP_THEME_NAME}
      - ../.docker/certs:/etc/certs
    ports:
      - 3000:3000
      - 3001:3001
    restart: unless-stopped
    command: >
      bash -c "yarn && yarn run dev"

volumes:
  db_data: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  sonarqube_logs: {}
  postgresql: {}
  postgresql_data: {}